/* App.css */
.app {
  position: fixed;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: flex; /* Add this line to make the parent a flex container */
  background-color: #f7f7f7; /* Light background color */
}

.chat-left {
  flex: 1; /* Use flex-grow to make it expand when chat-right is hidden */
  height: 100vh;
  display: flex;
  flex-direction: column;
  border-right: 1px solid #ccc;
  background-color: #fff;
  transition: flex 0.3s ease-in-out; /* Transition the flex property */
}

.chat-right {
  width: 50%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  transition: transform 0.3s ease-in-out; /* Animation for sliding */
  transform: translateX(100%); /* Start off-screen */
  position: absolute; /* Position absolute to overlay it correctly */
  right: 0; /* Align to the right */
  top: 0;
  bottom: 0;
}

.chat-right.visible {
  transform: translateX(0); /* Slide in */
  position: relative; /* Position relative when visible */
}

.chat-right.visible ~ .chat-left {
  flex: 1; /* Set flex to 1 when chat-right is visible */
  width: 50%; /* Ensure it takes up 50% of the width */
  transition: flex 0.3s ease-in-out, width 0.3s ease-in-out;
}




/* .app {
  position: fixed;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: #f7f7f7; 
}

.chat-left {
  width: 100%; 
  height: 100vh;
  display: flex;
  flex-direction: column;
  border-right: 1px solid #ccc;
  background-color: #fff;
  transition: width 0.3s ease-in-out;
}

.chat-right {
  width: 50%;
  flex-direction: column;
  transition: transform 0.3s ease-in-out; 
  transform: translateX(100%); 
}

.chat-right.visible {
  transform: translateX(0); 
  flex: 1;
}
.chat-right.visible ~ .chat-left {
  width: 50%; 
  transition: width 0.3s ease-in-out;
} */